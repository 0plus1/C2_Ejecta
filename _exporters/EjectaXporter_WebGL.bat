fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "GLWrap_.prototype.loadTexture = function (img, tiling, linearsampling, pixelformat, tiletype)" --replace "GLWrap_.prototype.loadTexture = function (img, tiling, linearsampling, pixelformat)"
fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "if (tiling)\n		{\n			if (tiletype === \"repeat-x\")\n			{\n				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n			}\n			else if (tiletype === \"repeat-y\")\n			{\n				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n			}\n			else\n			{\n				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n			}\n		}\n		else\n		{\n			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n		}" --replace "gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, tiling ? gl.REPEAT : gl.CLAMP_TO_EDGE); //jpt tiling restructured\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, tiling ? gl.REPEAT : gl.CLAMP_TO_EDGE);//jpt tiling restructured, replaces the if(tiling) part"
fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "this.isDomFree = this.isDirectCanvas || this.isCocoonJs;" --replace "this.isDomFree = true;"
fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "if (this.enableWebGL && !this.isDomFree)" --replace "if (this.enableWebGL)"
fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);\n			this.overlay_canvas.oncontextmenu = function (e) { return false; };\n			this.overlay_canvas.onselectstart = function (e) { return false; };\n			this.overlay_canvas.width = canvas.width;\n			this.overlay_canvas.height = canvas.height;\n			this.positionOverlayCanvas();" --replace ""
fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "if (this.overlay_canvas)\n		{\n			this.overlay_canvas.width = w;\n			this.overlay_canvas.height = h;\n		}" --replace ""
fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "this.canvas.parentNode.removeChild(this.overlay_canvas);" --replace ""
fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "if (this.fullscreen_mode >= 2)\n		{\n			var orig_aspect = this.original_width / this.original_height;\n			var cur_aspect = this.width / this.height;\n			if (cur_aspect > orig_aspect)\n				this.aspect_scale = this.height / this.original_height;\n			else\n				this.aspect_scale = this.width / this.original_width;\n		}" --replace ""
fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "var isfullscreen = (document[\"mozFullScreen\"] || document[\"webkitIsFullScreen\"] || document[\"fullScreen\"] || this.isNodeFullscreen);\n		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();\n		overlay_position.position = \"absolute\";\n		jQuery(this.overlay_canvas).css(overlay_position);" --replace ""

fnr.exe --cl --dir %CD% --fileMask "*.js"  --find "if (!this.instanceObject.paused)" --replace ""

